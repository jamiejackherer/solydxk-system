#!/bin/sh

set -e

# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask solydxk-cifs-umount.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled solydxk-cifs-umount.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable solydxk-cifs-umount.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state solydxk-cifs-umount.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask solydxk-system-adjust.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled solydxk-system-adjust.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable solydxk-system-adjust.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state solydxk-system-adjust.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_enable
# This will only remove masks created by d-s-h on package removal.
deb-systemd-helper unmask solydxk-system-aptupdate.service >/dev/null || true

# was-enabled defaults to true, so new installations run enable.
if deb-systemd-helper --quiet was-enabled solydxk-system-aptupdate.service; then
	# Enables the unit on first installation, creates new
	# symlinks on upgrades if the unit file has changed.
	deb-systemd-helper enable solydxk-system-aptupdate.service >/dev/null || true
else
	# Update the statefile to add new symlinks (if any), which need to be
	# cleaned up on purge. Also remove old symlinks.
	deb-systemd-helper update-state solydxk-system-aptupdate.service >/dev/null || true
fi
# End automatically added section
# Automatically added by dh_systemd_start
if [ -d /run/systemd/system ]; then
	systemctl --system daemon-reload >/dev/null || true
	deb-systemd-invoke start solydxk-cifs-umount.service solydxk-system-adjust.service solydxk-system-aptupdate.service >/dev/null || true
fi
# End automatically added section


case "$1" in
    configure|upgrade|update|reconfigure)
    
        if [ -f /etc/default/grub ]; then
	    sed -i -e 's/GRUB_DISTRIBUTOR=.*/GRUB_DISTRIBUTOR=`lsb_release -d -s 2>\/dev\/null || echo SolydXK`/' /etc/default/grub
	fi
	
	if [ -f /etc/lightdm/lightdm.conf ]; then
	    sed -i -e 's/[# ]*greeter-hide-users=.*/greeter-hide-users=false/' /etc/lightdm/lightdm.conf
	fi
        
        CONT=""
        if [ -f /etc/modprobe.d/alsa-base.conf ]; then
            CONT=$(cat /etc/modprobe.d/alsa-base.conf)
        fi
        
        CHK="options snd-hda-intel model"
        case "$CONT" in
            *$CHK* )
                #echo "snd-hda-intel model already set"
                ;;
            *) 
                echo "snd-hda-intel model set to auto"
                echo >> /etc/modprobe.d/alsa-base.conf
                echo "options snd-hda-intel model=auto" >> /etc/modprobe.d/alsa-base.conf
        esac
        
        CONT=""
        if [ -f /etc/modprobe.d/alsa-base-blacklist.conf ]; then
            CONT=$(cat /etc/modprobe.d/alsa-base-blacklist.conf)
        fi
        
        CHK="blacklist pcspkr"
        case "$CONT" in
            *$CHK* )
                #echo "pcspkr already blacklisted"
                ;;
            *) 
                echo "pcspkr blacklisted"
                echo >> /etc/modprobe.d/alsa-base-blacklist.conf
	        echo "blacklist pcspkr" >> /etc/modprobe.d/alsa-base-blacklist.conf
        esac

	if which glib-compile-schemas >/dev/null 2>&1
	then
	    glib-compile-schemas /usr/share/glib-2.0/schemas
	fi
	
	# Add some settings for Samba
	SMB='/etc/samba/smb.conf'
	if [ -f $SMB ]; then
	  if ! grep -Fq "## SOLYDXK" $SMB; then
	    sed -i -e 's/\[global\]/\[global\]\n  ## SOLYDXK\n\n  follow symlinks = yes\n  wide links = yes\n  unix extensions = no\n  client lanman auth = yes\n  client ntlmv2 auth = no\n/' $SMB
	    sed -i -e 's/^;create mask/create mask/' $SMB
	  fi
	fi
	
	/usr/bin/python3 /usr/lib/solydxk/system/adjust.py
	
	# Remove old initv script
	INITCONF='/etc/init.d/solydxk-system'
	if [ -e $INITCONF ]; then
	  update-rc.d solydxk-system remove
	  rm $INITCONF
	fi
	
	# If dpkg removed /usr/local/bin: recreate it
	if [ ! -e /usr/local/bin ]; then
	  mkdir -p /usr/local/bin
	fi
	
	# Set the right permissions to /etc/skel/.gnupg
	if [ -d /etc/skel/.gnupg ]; then
	  chmod -R 700 /etc/skel/.gnupg
	fi
	
	# Check for rogue files
	find /usr/share/applications -type l -name "*firefox.desktop" -exec rm {} \;
	
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)

    ;;
    triggered)
	/usr/lib/solydxk/system/adjust.py
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
